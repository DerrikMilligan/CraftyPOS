generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GlobalConfig {
  id           Int   @id @default(autoincrement())
  salesTaxRate Float
}

model PaymentMethod {
  id             Int       @id @default(autoincrement())
  name           String
  flatFee        Float     @default(0.0)
  percentFee     Float     @default(0.0)
  roundToQuarter Boolean   @default(false)
  active         Boolean   @default(true)
  Invoices       Invoice[]
}

model User {
  id             Int    @id @default(autoincrement())
  username       String @unique
  email          String @unique
  hashedPassword String
  role           Role   @default(USER)
  Logs           Log[]
}

model Vendor {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  color     String
  email     String
  Items     Item[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  Items Item[]
}

model Item {
  id           Int           @id @default(autoincrement())
  name         String
  stock        Int
  price        Float
  vendorId     Int
  Vendor       Vendor        @relation(fields: [vendorId], references: [id])
  Transactions Transaction[]
  Tags         Tag[]
}

//model Customer {
//  id        Int       @id @default(autoincrement())
//  firstName String
//  lastName  String
//  email     String
//  phone     String
//  Invoices  Invoice[]
//}

model Invoice {
  id              Int           @id @default(autoincrement())
//  customerId      Int
  paymentMethodId Int
  subTotal        Float
  salesTax        Float
  processingFees  Float
  total           Float
  checkNumber     String
  timestamp       DateTime      @default(now())
//  Customer        Customer      @relation(fields: [customerId], references: [id])
  PaymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  Transactions    Transaction[]
}

model Transaction {
  id           Int     @id @default(autoincrement())
  invoiceId    Int
  itemId       Int
  itemQuantity Int     @default(1)
  pricePer     Float
  Item         Item    @relation(fields: [itemId], references: [id])
  Invoice      Invoice @relation(fields: [invoiceId], references: [id])
}

model Log {
  id        Int      @id @default(autoincrement())
  userId    Int
  message   String
  timestamp DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}
