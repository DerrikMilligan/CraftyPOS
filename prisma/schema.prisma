generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GlobalConfig {
  id           Int   @id @default(autoincrement())
  salesTaxRate Float
}

model PaymentMethod {
  id             Int       @id @default(autoincrement())
  name           String
  flatFee        Float     @default(0.0)
  percentFee     Float     @default(0.0)
  roundToQuarter Boolean   @default(false)
  active         Boolean   @default(true)
  Invoice        Invoice[]
}

model User {
  id             Int    @id @default(autoincrement())
  username       String @unique
  email          String @unique
  hashedPassword String
  role           Role   @default(USER)
  Log            Log[]
}

model Vendor {
  id        Int         @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  inventory Inventory[]
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String
  inventory Inventory[]
}

model Inventory {
  id          Int           @id @default(autoincrement())
  name        String
  stock       Int
  price       Float
  vendorId    Int
  vendor      Vendor        @relation(fields: [vendorId], references: [id])
  Transaction Transaction[]
  tags        Tag[]
}

model Customer {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  phone     String
  Invoice   Invoice[]
}

model Invoice {
  id              Int           @id @default(autoincrement())
  customerId      Int
  paymentMethodId Int
  subTotal        Float
  salesTax        Float
  processingFees  Float
  total           Float
  isBundle        Boolean       @default(false)
  bundleSubTotal  Float
  checkNumber     String
  timestamp       DateTime      @default(now())
  customer        Customer      @relation(fields: [customerId], references: [id])
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  Transaction     Transaction[]
}

model Transaction {
  id           Int       @id @default(autoincrement())
  invoiceId    Int
  inventoryId  Int
  itemQuantity Int       @default(1)
  pricePer     Float
  inventory    Inventory @relation(fields: [inventoryId], references: [id])
  invoice      Invoice   @relation(fields: [invoiceId], references: [id])
}

model Log {
  id        Int      @id @default(autoincrement())
  userId    Int
  message   String
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}
